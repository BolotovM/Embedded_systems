module multiplexer
#( parameter N = 4)
(
	input	logic [N-1:0] d3,d2,d1,d0, 	// data	
	input	logic c1,c0,				// control
	output	reg	[N-1:0] y
);
 
	always @*
	case ({c1, c0})
		2'b00: y = d0;
		2'b01: y = d1;
		2'b10: y = d2;
		2'b11: y = d3; //блокирующее присваивание
	endcase
 
endmodule

module priority_multiplexer
(
	input		d3,d2,d1,d0, 	// data	
	input		c2,c1,c0,	// control
	output	reg y
);
 
	always @*
	casex ({c2, c1, c0})
		3'b??1: y = d0;
		3'b?10: y = d1;
		3'b100: y = d2;
		3'b000: y = d3;
	endcase
 
endmodule